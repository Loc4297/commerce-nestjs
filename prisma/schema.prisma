generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  password  String
  isAdmin   Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart[]

  @@map("users")
}

model Cart {
  id                 Int            @id @default(autoincrement())
  couponId           Int?
  cartTotal          Int
  totalAfterDiscount Float
  userId             Int
  createdAt          DateTime       @default(now())
  coupons            Coupon?        @relation(fields: [couponId], references: [id])
  user               User           @relation(fields: [userId], references: [id])
  courses            CourseInCart[]

  @@map("carts")
}

model Course {
  id      Int            @id @default(autoincrement())
  name    String         @unique
  price   Int
  levelId Int
  skillId Int
  carts   CourseInCart[]
  level   Level          @relation(fields: [levelId], references: [id])
  skill   Skill          @relation(fields: [skillId], references: [id])

  @@map("courses")
}

model CourseInCart {
  courseId Int
  cartId   Int
  cart     Cart   @relation(fields: [cartId], references: [id])
  courses  Course @relation(fields: [courseId], references: [id])

  @@id([courseId, cartId])
  @@map("courseInCart")
}

model Coupon {
  id       Int    @id @default(autoincrement())
  name     String @unique
  discount Int
  cart     Cart[]

  @@map("coupons")
}

model Level {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  courses Course[]

  @@map("levels")
}

model Skill {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  courses Course[]

  @@map("skills")
}
